{"version":3,"file":"static/js/792.7e528dc9.chunk.js","mappings":"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","sources":["components/CastItem/CastItem.styled.jsx","components/CastItem/CastItem.jsx","components/CastList/CastList.styled.jsx","components/CastList/CastList.jsx","pages/Cast.jsx"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const StyledLi = styled.li`\n    border-top-left-radius: 6px;\n    border-top-right-radius: 6px;\n   width: 138px;\n   background-color: #BDEEE4;\n   border-bottom-left-radius: 6px;\n    border-bottom-right-radius: 6px;\n\n`\nexport const StyledImgWrapper = styled.div`\n    width: 138px;\n    height: 207px;\n    border-top-left-radius: 6px;\n    border-top-right-radius: 6px;\n\n`\n\nexport const StyledImg = styled.img`\n    border-top-left-radius: 6px;\n    border-top-right-radius: 6px;\n    width: 138px;\n\n`\n\nexport const StyledDescriptinDiv = styled.div`\n    padding: 12px 8px;\n    display: flex;\n    flex-direction: column;\n    gap: 6px;\n`\nexport const StyledP = styled.p`\nfont-size: 14px;\n    color:#121826;\n    font-weight:600;\n`\n\nexport const StyledSpan = styled.span`\n    color:#121826;\n    font-weight:400;\n`","import { StyledLi, StyledImg, StyledImgWrapper, StyledDescriptinDiv, StyledP, StyledSpan } from \"./CastItem.styled\";\n\nconst CastItem = ({ cast }) => {\n    const copy = [];\n    cast.forEach(function (el) {\n        if (el.profile_path) {\n            el.profile_path = `https://image.tmdb.org/t/p/w200${el.profile_path}`\n        } else {\n            el.profile_path = \"https://via.placeholder.com/138x207\"\n        }\n        copy.push(el)\n    }\n\n    )\n    return (\n        copy.map((el) =>\n            <StyledLi key={el.credit_id}>\n                <StyledImgWrapper>\n                    <StyledImg src={el.profile_path}\n                        loading=\"lazy\"\n                        alt={`${el.name}`}\n                    />\n                </StyledImgWrapper>\n                <StyledDescriptinDiv>\n                    <StyledP>Character <br />\n                        <StyledSpan>{el.character}</StyledSpan></StyledP>\n                    <StyledP>Actor <br />\n                        <StyledSpan>{el.name}</StyledSpan></StyledP>\n                </StyledDescriptinDiv>\n            </StyledLi>\n        )\n    )\n}\nexport default CastItem;","import { styled } from \"styled-components\";\n\nexport const StyledUl = styled.ul`\n    display: flex;\n    justify-content: space-between;\n    gap: 20px;\n    flex-wrap: wrap;\n`","import CastItem from \"components/CastItem/CastItem\";\nimport Container from \"components/Container/Container\";\n\nimport { StyledUl } from \"./CastList.styled\"\nconst CastList = ({ cast }) => {\n    return (\n        <Container>\n            <StyledUl>\n                {cast && cast.length > 0 && <CastItem cast={cast} />}\n            </StyledUl>\n        </Container>\n    )\n}\nexport default CastList;","import { fetchCastById } from \"../servisce/api\";\n\nimport { useState, useEffect } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport CastList from \"components/CastList/CastList\";\nimport Loader from \"components/Loader/Loader\";\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [characters, setCharacters] = useState({});\n    const [loader, setLoader] = useState(false);\n\n    useEffect(() => {\n        setLoader(true);\n        const fetchCast = async () => {\n            if (!movieId) return\n            try {\n                const castData = await fetchCastById(movieId);\n                setCharacters(castData);\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n            } finally {\n                setLoader(false);\n            }\n\n\n        }\n        fetchCast();\n    }, [movieId]);\n\n    const { cast } = characters;\n\n    return (\n        <>\n            {loader && <Loader />}\n            <CastList cast={cast} />\n        </>\n    )\n}\nexport default Cast; "],"names":["StyledLi","styled","_templateObject","_taggedTemplateLiteral","StyledImgWrapper","_templateObject2","StyledImg","_templateObject3","StyledDescriptinDiv","_templateObject4","StyledP","_templateObject5","StyledSpan","_templateObject6","_ref","cast","copy","forEach","el","profile_path","concat","push","map","_jsxs","children","_jsx","src","loading","alt","name","character","credit_id","StyledUl","Container","length","CastItem","movieId","useParams","_useState","useState","_useState2","_slicedToArray","characters","setCharacters","_useState3","_useState4","loader","setLoader","useEffect","fetchCast","_asyncToGenerator","_regeneratorRuntime","_callee","castData","_context","prev","next","abrupt","fetchCastById","sent","t0","console","error","finish","stop","apply","arguments","_Fragment","Loader","CastList"],"sourceRoot":""}