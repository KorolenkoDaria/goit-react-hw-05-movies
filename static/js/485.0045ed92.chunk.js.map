{"version":3,"file":"static/js/485.0045ed92.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","servisce/api.js"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const StyledLi = styled.li`\n    width: 232px;\n    height: 604px;\n    background-color: #314049;\n    border-bottom-left-radius: 6px;\n    border-bottom-right-radius: 6px;\n    border-top-left-radius: 6px;\n    border-top-right-radius: 6px;\n`\nexport const StyledImg = styled.img`\n    border-top-left-radius: 6px;\n    border-top-right-radius: 6px;\n    min-height: 348px;\n`\n\nexport const StyledIDiv = styled.div`\n    padding: 20px 12px;\n    background-color: #314049;\n    border-bottom-left-radius: 6px;\n    border-bottom-right-radius: 6px;\n    min-height: 250px;\n`\nexport const StyledH2 = styled.h2`\n    color: #fff;\n    font-size: 18px;\n    margin-bottom: 8px;\n    min-height: 63px;\n`\n\nexport const StyledP = styled.p`\n    font-size: 14px;\n    color: #fff;\n    font-weight: 600;\n`\n\nexport const StyledSpan = styled.span`\ndisplay: block;\nfont-size: 14px;\ncolor: #BDEEE4;\nfont-weight: 400;\nmargin-bottom: 8px;\n`\nexport const StyledSpanOverview = styled.span`\nfont-size: 14px;\noverflow: hidden;\ndisplay: -webkit-box;\n-webkit-line-clamp: 3;\n-webkit-box-orient: vertical;\ncolor: #BDEEE4;\nfont-weight: 400;\n`\n","import { Link } from \"react-router-dom\";\n\nimport { routes } from \"routes\";\n\nimport { StyledLi, StyledImg, StyledIDiv, StyledH2, StyledP, StyledSpan, StyledSpanOverview } from \"./MovieItem.styled\";\n\nconst MovieItem = ({ original_title, name, poster_path, vote_average, release_date, overview, id, location, first_air_date }) => {\n\n  let img = ''\n  if (poster_path) {\n    img = `https://image.tmdb.org/t/p/w300${poster_path}`;\n  } else {\n    img = `https://via.placeholder.com/300x450`\n  }\n  if (!release_date) {\n    release_date = first_air_date ? first_air_date : \"-\";\n  }\n\n  return (\n    <StyledLi>\n      <Link to={`${routes.MOVIES}/${id}`} state={{ from: location }}>\n        <StyledImg src={img} alt={`${original_title}`} />\n        <StyledIDiv>\n          <StyledH2>{name ? name : original_title}</StyledH2>\n          <StyledP>Release date <br />\n            <StyledSpan>{release_date}</StyledSpan>\n          </StyledP>\n          <StyledP>Vote Average<br />\n            <StyledSpan>{vote_average}</StyledSpan>\n          </StyledP>\n          <StyledP>Overview <br />\n            <StyledSpanOverview>{overview}</StyledSpanOverview>\n          </StyledP>\n        </StyledIDiv>\n      </Link>\n    </StyledLi >\n  );\n}\nexport default MovieItem;","import { styled } from \"styled-components\";\n\nexport const StyledMovieList = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    gap: 20px;\n`","import MovieItem from \"components/MovieItem/MovieItem\";\n\nimport { StyledMovieList } from \"./MovieList.styled\";\nconst MovieList = ({ movies, location }) => {\n  return (\n    <StyledMovieList>\n      {movies.map((movie) => (\n\n        <MovieItem\n          location={location}\n          key={movie.id}\n          id={movie.id}\n          name={movie.name}\n          original_title={movie.original_title}\n          poster_path={movie.poster_path}\n          vote_average={movie.vote_average}\n          release_date={movie.release_date}\n          overview={movie.overview}\n          first_air_date={movie.first_air_date}\n        />\n\n      ))}\n    </StyledMovieList>\n  );\n};\n\nexport default MovieList;\n","import { styled } from \"styled-components\";\n\nexport const StyledMain = styled.main`\n    margin-top: 135px;\n    \n`","import { useState, useEffect } from \"react\";\n\nimport { serviceMovie } from \"../../servisce/api\";\n\nimport MovieList from \"../../components/MovieList/MovieList\";\nimport Container from \"components/Container/Container\";\nimport Loader from \"components/Loader/Loader\";\n\nimport { StyledMain } from \"./Home.styled\";\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    setLoader(true);\n    const fetchMovies = async () => {\n      try {\n        const data = await serviceMovie();\n        setMovies(data.results);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoader(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <Container>\n      <StyledMain>\n        {loader && <Loader />}\n        <MovieList movies={movies}></MovieList>\n      </StyledMain>\n    </Container>\n  )\n}\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst END_POINT = \"/trending\";\nconst API_KEY = \"ff7af564ffcf2b7c2ca4fa26aeda6360\";\nconst params = new URLSearchParams({\n  api_key: API_KEY,\n  page: 1,\n});\n\nexport async function serviceMovie(page = 1) {\n  params.page = page;\n  try {\n    const response = await axios.get(`${BASE_URL}${END_POINT}/all/day?${params}`);\n    const data = await response.data;\n    return data; \n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieById(id) {\n  try {  \n    const response = await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n    const data = await response.data;\n    return data;   \n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieByName (movie) {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie?query=${movie}&${params}`);\n    const data = response.data;\n    return data;\n  } catch (error){ \n    console.log(error.message);\n  }\n}\n\nexport async function fetchCastById(id) {\n  try { \n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n    const data = await response.data;\n    return data;   \n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchReviewsById(id) {\n  try {  \n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n    const data = await response.data;\n    return data;   \n  } catch (error) {\n    console.log(error.message);\n  }\n}"],"names":["StyledLi","styled","_templateObject","_taggedTemplateLiteral","StyledImg","_templateObject2","StyledIDiv","_templateObject3","StyledH2","_templateObject4","StyledP","_templateObject5","StyledSpan","_templateObject6","StyledSpanOverview","_templateObject7","_ref","original_title","name","poster_path","vote_average","release_date","overview","id","location","first_air_date","img","concat","_jsx","children","_jsxs","Link","to","routes","state","from","src","alt","StyledMovieList","movies","map","movie","MovieItem","StyledMain","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","loader","setLoader","useEffect","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","serviceMovie","sent","results","t0","console","error","finish","stop","apply","arguments","Container","Loader","MovieList","BASE_URL","END_POINT","API_KEY","params","URLSearchParams","api_key","page","_serviceMovie","response","_args","length","undefined","axios","abrupt","log","message","fetchMovieById","_x","_fetchMovieById","_callee2","_context2","fetchMovieByName","_x2","_fetchMovieByName","_callee3","_context3","fetchCastById","_x3","_fetchCastById","_callee4","_context4","fetchReviewsById","_x4","_fetchReviewsById","_callee5","_context5"],"sourceRoot":""}